COMANDO BÁSICOS DE NPM

1. npm init, inicializa un proyecto de node,

2. Explicación de los campos de package.json:
    “name”: “npm-init” —> Podemos ponerle un nombre sin embargo toma por defecto el de la carpeta.

    “version”: “1.0.0” —> Podemos cambiar segun el caso, dependiendo un cambio mayor o uno menor

    “description”:"" —> Podemos hacer una breve descripcion del proyecto.

    “entry point”: “(index.js)” —> Punto de entrada del proyecto.

    “test command”: —> Podemos incluir los comandos para validar nuestro codigo.

    “git repository”: —> Podemos incluir el repositorio para mantenerlo en la nube

    “keywords”: [“javascript”, “angular”, “node”] —> Que va a utilizar nuestro proyecto.

    “author”: "Alexa Pulido<pulidoaleXXXXXXX> —> Persona que crea el proyecto

    “license”: “MIT” —> Licencias, la mas utilizada es MIT, permite distribuir nuestro codigo.

3. npm install name-app --save-dev or -D, dependencia que solo se usará en el entorno de desarrollo.

4. npm install --save or -S, dependecia para ser llevada a producción.

5. npm install -g, instala paquetes globales

6. npm list, lista los paquetes instalados en el proyecto. npm list -g, los paquetes globales.

7. npm install package-name -o → Instalar una dependencia opcional.

8. npm install package-name —dry-run. Con esto se simula la instalación pero sin agregar ningún paquete, si no hay ningún conflicto se procede a instalar de la manera convencional.

9. npm install package-name@0.15.0 → Instalar la versión especifica de un paquete. Si luego se quiere instalar la versión más reciente se usa: npm install package-name@latest.

10. npm install → Instala las dependencias que estén dentro de un package.json.

11. npm audit → Información detallada de la actualización de las librerías.

12. npm audit --json → Información detallada y organizada de la auditoría en formato json.

13. npm audit fix → Corrige los errores, si usamos --force lo forzamos a actualizar.

14. npm uninstall nombre-dependecia → eliminar una dependencia instalada. Otra forma es borrarla del package-json, el paso siguiende es ejecutar: rm -rf node_modules/ y luego volver a ejecutar npm install.

15. npm run build → Compila el proyecto y lo prepara para producción, --dd nos da más Información.

16. npm ci → librerías depreciadas que ya no estarán en producción.

17. npm a dduser → permite iniciar sesión en nuestra cuenta npm.

18. npm publish →  Nos permite publicar  un paquete.

19. npm version patch → Aumenta una version path (1.0.0) -> (1.0.1)

20. npm version minor → Aumenta una version minor (1.0.0) -> (1.1.0)

21. npm version major → Aumenta una version major (1.0.0) -> (2.0.0)

22. npm version `` → Aumenta una version específica (1.0.0) -> (3.1.1)

NPX
Permite ejecutar instancias de dependecias sin descargarlas e instalarlas.


